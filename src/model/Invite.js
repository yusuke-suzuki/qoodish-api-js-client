/**
 * Qoodish API
 * Qoodih API. 
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Author from './Author';
import InviteInvitable from './InviteInvitable';

/**
 * The Invite model module.
 * @module model/Invite
 * @version 0.0.1
 */
class Invite {
    /**
     * Constructs a new <code>Invite</code>.
     * Invite object.
     * @alias module:model/Invite
     */
    constructor() { 
        
        Invite.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Invite</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Invite} obj Optional instance to populate.
     * @return {module:model/Invite} The populated <code>Invite</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Invite();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('invitable')) {
                obj['invitable'] = InviteInvitable.constructFromObject(data['invitable']);
            }
            if (data.hasOwnProperty('sender')) {
                obj['sender'] = Author.constructFromObject(data['sender']);
            }
            if (data.hasOwnProperty('expired')) {
                obj['expired'] = ApiClient.convertToType(data['expired'], 'Boolean');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
Invite.prototype['id'] = undefined;

/**
 * @member {module:model/InviteInvitable} invitable
 */
Invite.prototype['invitable'] = undefined;

/**
 * @member {module:model/Author} sender
 */
Invite.prototype['sender'] = undefined;

/**
 * @member {Boolean} expired
 */
Invite.prototype['expired'] = undefined;

/**
 * @member {String} created_at
 */
Invite.prototype['created_at'] = undefined;

/**
 * @member {String} updated_at
 */
Invite.prototype['updated_at'] = undefined;






export default Invite;

