/**
 * Qoodish API
 * Qoodish API JavaScript Client. 
 *
 * The version of the OpenAPI document: 0.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Author from './Author';

/**
 * The Comment model module.
 * @module model/Comment
 * @version 0.2.1
 */
class Comment {
    /**
     * Constructs a new <code>Comment</code>.
     * Review comment object.
     * @alias module:model/Comment
     */
    constructor() { 
        
        Comment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Comment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Comment} obj Optional instance to populate.
     * @return {module:model/Comment} The populated <code>Comment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Comment();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('review_id')) {
                obj['review_id'] = ApiClient.convertToType(data['review_id'], 'Number');
            }
            if (data.hasOwnProperty('author')) {
                obj['author'] = Author.constructFromObject(data['author']);
            }
            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('editable')) {
                obj['editable'] = ApiClient.convertToType(data['editable'], 'Boolean');
            }
            if (data.hasOwnProperty('liked')) {
                obj['liked'] = ApiClient.convertToType(data['liked'], 'Boolean');
            }
            if (data.hasOwnProperty('likes_count')) {
                obj['likes_count'] = ApiClient.convertToType(data['likes_count'], 'Number');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
Comment.prototype['id'] = undefined;

/**
 * @member {Number} review_id
 */
Comment.prototype['review_id'] = undefined;

/**
 * @member {module:model/Author} author
 */
Comment.prototype['author'] = undefined;

/**
 * @member {String} body
 */
Comment.prototype['body'] = undefined;

/**
 * @member {Boolean} editable
 */
Comment.prototype['editable'] = undefined;

/**
 * @member {Boolean} liked
 */
Comment.prototype['liked'] = undefined;

/**
 * @member {Number} likes_count
 */
Comment.prototype['likes_count'] = undefined;

/**
 * @member {String} created_at
 */
Comment.prototype['created_at'] = undefined;






export default Comment;

