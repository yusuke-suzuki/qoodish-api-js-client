/**
 * Qoodish API
 * Qoodih API. 
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import MapDetail from '../model/MapDetail';

/**
* UserMaps service.
* @module api/UserMapsApi
* @version 0.0.1
*/
export default class UserMapsApi {

    /**
    * Constructs a new UserMapsApi. 
    * @alias module:api/UserMapsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the usersUserIdMapsGet operation.
     * @callback module:api/UserMapsApi~usersUserIdMapsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/MapDetail>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch user Maps
     * Fetch user created Maps. 
     * @param {Number} userId A valid User ID.
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.following Filter following maps with this option.
     * @param {module:api/UserMapsApi~usersUserIdMapsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/MapDetail>}
     */
    usersUserIdMapsGet(userId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'userId' is set
      if (userId === undefined || userId === null) {
        throw new Error("Missing the required parameter 'userId' when calling usersUserIdMapsGet");
      }

      let pathParams = {
        'user_id': userId
      };
      let queryParams = {
        'following': opts['following']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['firebaseAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [MapDetail];
      return this.apiClient.callApi(
        '/users/{user_id}/maps', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
