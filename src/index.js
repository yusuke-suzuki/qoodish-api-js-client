/**
 * Qoodish API
 * Qoodih API. 
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Author from './model/Author';
import Collaborator from './model/Collaborator';
import Comment from './model/Comment';
import CurrentUser from './model/CurrentUser';
import InappropreateContent from './model/InappropreateContent';
import InlineObject from './model/InlineObject';
import InlineObject1 from './model/InlineObject1';
import Invite from './model/Invite';
import InviteInvitable from './model/InviteInvitable';
import Like from './model/Like';
import MapDetail from './model/MapDetail';
import MapDetailBase from './model/MapDetailBase';
import Metadata from './model/Metadata';
import NewInvite from './model/NewInvite';
import NewMap from './model/NewMap';
import NewReview from './model/NewReview';
import NewUser from './model/NewUser';
import Notification from './model/Notification';
import NotificationNotifiable from './model/NotificationNotifiable';
import Place from './model/Place';
import PushNotification from './model/PushNotification';
import Review from './model/Review';
import ReviewImage from './model/ReviewImage';
import ReviewMap from './model/ReviewMap';
import Spot from './model/Spot';
import CollaboratorsApi from './api/CollaboratorsApi';
import CommentsApi from './api/CommentsApi';
import DevicesApi from './api/DevicesApi';
import FollowsApi from './api/FollowsApi';
import InvitesApi from './api/InvitesApi';
import IssueContentsApi from './api/IssueContentsApi';
import LikesApi from './api/LikesApi';
import MapsApi from './api/MapsApi';
import MetadataApi from './api/MetadataApi';
import NotificationsApi from './api/NotificationsApi';
import PlacesApi from './api/PlacesApi';
import PushNotificationApi from './api/PushNotificationApi';
import ReviewsApi from './api/ReviewsApi';
import SpotsApi from './api/SpotsApi';
import UserMapsApi from './api/UserMapsApi';
import UsersApi from './api/UsersApi';


/**
* Qoodih_API_.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var QoodishApi = require('index'); // See note below*.
* var xxxSvc = new QoodishApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new QoodishApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new QoodishApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new QoodishApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.0.1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Author model constructor.
     * @property {module:model/Author}
     */
    Author,

    /**
     * The Collaborator model constructor.
     * @property {module:model/Collaborator}
     */
    Collaborator,

    /**
     * The Comment model constructor.
     * @property {module:model/Comment}
     */
    Comment,

    /**
     * The CurrentUser model constructor.
     * @property {module:model/CurrentUser}
     */
    CurrentUser,

    /**
     * The InappropreateContent model constructor.
     * @property {module:model/InappropreateContent}
     */
    InappropreateContent,

    /**
     * The InlineObject model constructor.
     * @property {module:model/InlineObject}
     */
    InlineObject,

    /**
     * The InlineObject1 model constructor.
     * @property {module:model/InlineObject1}
     */
    InlineObject1,

    /**
     * The Invite model constructor.
     * @property {module:model/Invite}
     */
    Invite,

    /**
     * The InviteInvitable model constructor.
     * @property {module:model/InviteInvitable}
     */
    InviteInvitable,

    /**
     * The Like model constructor.
     * @property {module:model/Like}
     */
    Like,

    /**
     * The MapDetail model constructor.
     * @property {module:model/MapDetail}
     */
    MapDetail,

    /**
     * The MapDetailBase model constructor.
     * @property {module:model/MapDetailBase}
     */
    MapDetailBase,

    /**
     * The Metadata model constructor.
     * @property {module:model/Metadata}
     */
    Metadata,

    /**
     * The NewInvite model constructor.
     * @property {module:model/NewInvite}
     */
    NewInvite,

    /**
     * The NewMap model constructor.
     * @property {module:model/NewMap}
     */
    NewMap,

    /**
     * The NewReview model constructor.
     * @property {module:model/NewReview}
     */
    NewReview,

    /**
     * The NewUser model constructor.
     * @property {module:model/NewUser}
     */
    NewUser,

    /**
     * The Notification model constructor.
     * @property {module:model/Notification}
     */
    Notification,

    /**
     * The NotificationNotifiable model constructor.
     * @property {module:model/NotificationNotifiable}
     */
    NotificationNotifiable,

    /**
     * The Place model constructor.
     * @property {module:model/Place}
     */
    Place,

    /**
     * The PushNotification model constructor.
     * @property {module:model/PushNotification}
     */
    PushNotification,

    /**
     * The Review model constructor.
     * @property {module:model/Review}
     */
    Review,

    /**
     * The ReviewImage model constructor.
     * @property {module:model/ReviewImage}
     */
    ReviewImage,

    /**
     * The ReviewMap model constructor.
     * @property {module:model/ReviewMap}
     */
    ReviewMap,

    /**
     * The Spot model constructor.
     * @property {module:model/Spot}
     */
    Spot,

    /**
    * The CollaboratorsApi service constructor.
    * @property {module:api/CollaboratorsApi}
    */
    CollaboratorsApi,

    /**
    * The CommentsApi service constructor.
    * @property {module:api/CommentsApi}
    */
    CommentsApi,

    /**
    * The DevicesApi service constructor.
    * @property {module:api/DevicesApi}
    */
    DevicesApi,

    /**
    * The FollowsApi service constructor.
    * @property {module:api/FollowsApi}
    */
    FollowsApi,

    /**
    * The InvitesApi service constructor.
    * @property {module:api/InvitesApi}
    */
    InvitesApi,

    /**
    * The IssueContentsApi service constructor.
    * @property {module:api/IssueContentsApi}
    */
    IssueContentsApi,

    /**
    * The LikesApi service constructor.
    * @property {module:api/LikesApi}
    */
    LikesApi,

    /**
    * The MapsApi service constructor.
    * @property {module:api/MapsApi}
    */
    MapsApi,

    /**
    * The MetadataApi service constructor.
    * @property {module:api/MetadataApi}
    */
    MetadataApi,

    /**
    * The NotificationsApi service constructor.
    * @property {module:api/NotificationsApi}
    */
    NotificationsApi,

    /**
    * The PlacesApi service constructor.
    * @property {module:api/PlacesApi}
    */
    PlacesApi,

    /**
    * The PushNotificationApi service constructor.
    * @property {module:api/PushNotificationApi}
    */
    PushNotificationApi,

    /**
    * The ReviewsApi service constructor.
    * @property {module:api/ReviewsApi}
    */
    ReviewsApi,

    /**
    * The SpotsApi service constructor.
    * @property {module:api/SpotsApi}
    */
    SpotsApi,

    /**
    * The UserMapsApi service constructor.
    * @property {module:api/UserMapsApi}
    */
    UserMapsApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi
};
